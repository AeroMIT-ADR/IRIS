<?xml version="1.0"?>

<robot name="iris" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:include filename="$(find rotors_description)/urdf/component_snippets.xacro" />
  <!-- Instantiate iris "mechanics" -->
  <xacro:include filename="$(find rotors_description)/urdf/iris.xacro" />

  <!-- Instantiate a controller. -->
  <xacro:controller_plugin_macro namespace="${namespace}" imu_sub_topic="imu" />

  <xacro:if value="$(arg enable_mavlink_interface)">
    <!-- Instantiate mavlink telemetry interface. -->
    <xacro:default_mavlink_interface namespace="${namespace}" imu_sub_topic="imu" rotor_count="4" />
  </xacro:if>

  <!-- Mount an ADIS16448 IMU. -->
  <xacro:default_imu namespace="${namespace}" parent_link="${namespace}/base_link" />

  <xacro:if value="$(arg enable_ground_truth)">
    <xacro:ground_truth_imu_and_odometry namespace="${namespace}" parent_link="${namespace}/base_link" />
  </xacro:if>

  <xacro:if value="$(arg enable_logging)">
    <!-- Instantiate a logger -->
    <xacro:bag_plugin_macro
      namespace="${namespace}"
      bag_file="$(arg log_file)"
      rotor_velocity_slowdown_sim="${rotor_velocity_slowdown_sim}"
      wait_to_record_bag="$(arg wait_to_record_bag)" />
  </xacro:if>
  
    <link name="${namespace}/camera_2/camera_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://rotors_description/meshes/kinect_camera_simple.dae" scale="0.65 0.65 0.65"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.001"/>
      </geometry>
    </collision>
      <inertial>
        <mass value="0.13"/>
        <origin xyz="0 0 0"/>
        <inertia ixx="1e-6" ixy="0.0" ixz="0.0"
             iyy="1e-6" iyz="0.0"
             izz="1e-6" />
      </inertial>
  </link>

  <joint name="${namespace}/camera_2/camera_joint" type="fixed">
    <origin xyz="0.065 0 0.07" rpy="0 0 0"/>
    <parent link="${namespace}/base_link"/>
    <child link="${namespace}/camera_2/camera_link"/>
  </joint>

  <!-- Optical center of camera
  <link name="{namespace}/camera_optical_center_link" />
  <joint name="{namespace}/camera_optical_center_joint" type="fixed">
    <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}" />
    <parent link="{namespace}/camera_link" />
    <child link="{namespace}/camera_optical_center_link" />
    <limit upper="0" lower="0" effort="0" velocity="0" />
  </joint>   -->

 <gazebo reference="${namespace}/camera_2/camera_link">
      <sensor type="camera" name="${namespace}_camera">
        <update_rate>30.0</update_rate>
        <camera name="head">
          <horizontal_fov>1.047198</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.05</near>
            <far>3</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.05</stddev>
          </noise> 
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <!--robotNamespace>${namespace}/camera</robotNamespace-->
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>camera_2</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>camera_2/camera_link</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </gazebo>
</robot>

